// @generated by protoc-gen-es v2.7.0 with parameter "target=ts"
// @generated from file proto/api/v1/block.proto (package api.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file proto/api/v1/block.proto.
 */
export const file_proto_api_v1_block: GenFile = /*@__PURE__*/
  fileDesc("Chhwcm90by9hcGkvdjEvYmxvY2sucHJvdG8SBmFwaS52MSJvCgtCbG9ja0hlYWRlchIMCgRzbG90GAEgASgEEhYKDnByb3Bvc2VyX2luZGV4GAIgASgEEhMKC3BhcmVudF9yb290GAMgASgJEhIKCnN0YXRlX3Jvb3QYBCABKAkSEQoJYm9keV9yb290GAUgASgJIh0KG0dldExhdGVzdEJsb2NrSGVhZGVyUmVxdWVzdCJdChxHZXRMYXRlc3RCbG9ja0hlYWRlclJlc3BvbnNlEikKDGJsb2NrX2hlYWRlchgBIAEoCzITLmFwaS52MS5CbG9ja0hlYWRlchISCgpibG9ja19yb290GAIgASgJMnEKDEJsb2NrU2VydmljZRJhChRHZXRMYXRlc3RCbG9ja0hlYWRlchIjLmFwaS52MS5HZXRMYXRlc3RCbG9ja0hlYWRlclJlcXVlc3QaJC5hcGkudjEuR2V0TGF0ZXN0QmxvY2tIZWFkZXJSZXNwb25zZUI7WjlnaXRodWIuY29tL3N5am45OS9sZWFuVmlldy9iYWNrZW5kL2dlbi9wcm90by9hcGkvdjE7YXBpdjFiBnByb3RvMw");

/**
 * BlockHeader represents essential block information
 *
 * @generated from message api.v1.BlockHeader
 */
export type BlockHeader = Message<"api.v1.BlockHeader"> & {
  /**
   * @generated from field: uint64 slot = 1;
   */
  slot: bigint;

  /**
   * @generated from field: uint64 proposer_index = 2;
   */
  proposerIndex: bigint;

  /**
   * Hex encoded
   *
   * @generated from field: string parent_root = 3;
   */
  parentRoot: string;

  /**
   * Hex encoded  
   *
   * @generated from field: string state_root = 4;
   */
  stateRoot: string;

  /**
   * Hex encoded
   *
   * @generated from field: string body_root = 5;
   */
  bodyRoot: string;
};

/**
 * Describes the message api.v1.BlockHeader.
 * Use `create(BlockHeaderSchema)` to create a new message.
 */
export const BlockHeaderSchema: GenMessage<BlockHeader> = /*@__PURE__*/
  messageDesc(file_proto_api_v1_block, 0);

/**
 * GetLatestBlockHeaderRequest - fetch header of the current head block
 *
 * Empty - always returns the current head
 *
 * @generated from message api.v1.GetLatestBlockHeaderRequest
 */
export type GetLatestBlockHeaderRequest = Message<"api.v1.GetLatestBlockHeaderRequest"> & {
};

/**
 * Describes the message api.v1.GetLatestBlockHeaderRequest.
 * Use `create(GetLatestBlockHeaderRequestSchema)` to create a new message.
 */
export const GetLatestBlockHeaderRequestSchema: GenMessage<GetLatestBlockHeaderRequest> = /*@__PURE__*/
  messageDesc(file_proto_api_v1_block, 1);

/**
 * @generated from message api.v1.GetLatestBlockHeaderResponse
 */
export type GetLatestBlockHeaderResponse = Message<"api.v1.GetLatestBlockHeaderResponse"> & {
  /**
   * @generated from field: api.v1.BlockHeader block_header = 1;
   */
  blockHeader?: BlockHeader;

  /**
   * @generated from field: string block_root = 2;
   */
  blockRoot: string;
};

/**
 * Describes the message api.v1.GetLatestBlockHeaderResponse.
 * Use `create(GetLatestBlockHeaderResponseSchema)` to create a new message.
 */
export const GetLatestBlockHeaderResponseSchema: GenMessage<GetLatestBlockHeaderResponse> = /*@__PURE__*/
  messageDesc(file_proto_api_v1_block, 2);

/**
 * BlockService handles all block-related API requests
 *
 * @generated from service api.v1.BlockService
 */
export const BlockService: GenService<{
  /**
   * Get the latest block header from the head cache
   *
   * @generated from rpc api.v1.BlockService.GetLatestBlockHeader
   */
  getLatestBlockHeader: {
    methodKind: "unary";
    input: typeof GetLatestBlockHeaderRequestSchema;
    output: typeof GetLatestBlockHeaderResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_proto_api_v1_block, 0);

