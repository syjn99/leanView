// @generated by protoc-gen-es v2.7.0 with parameter "target=ts"
// @generated from file proto/api/v1/monitoring.proto (package api.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { BlockHeader } from "./block_pb";
import { file_proto_api_v1_block } from "./block_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file proto/api/v1/monitoring.proto.
 */
export const file_proto_api_v1_monitoring: GenFile = /*@__PURE__*/
  fileDesc("Ch1wcm90by9hcGkvdjEvbW9uaXRvcmluZy5wcm90bxIGYXBpLnYxIqMBCgpDbGllbnRIZWFkEhQKDGNsaWVudF9sYWJlbBgBIAEoCRIUCgxlbmRwb2ludF91cmwYAiABKAkSEgoKaXNfaGVhbHRoeRgDIAEoCBIpCgxibG9ja19oZWFkZXIYBCABKAsyEy5hcGkudjEuQmxvY2tIZWFkZXISEgoKYmxvY2tfcm9vdBgFIAEoCRIWCg5sYXN0X3VwZGF0ZV9tcxgGIAEoAyIbChlHZXRBbGxDbGllbnRzSGVhZHNSZXF1ZXN0InYKGkdldEFsbENsaWVudHNIZWFkc1Jlc3BvbnNlEigKDGNsaWVudF9oZWFkcxgBIAMoCzISLmFwaS52MS5DbGllbnRIZWFkEhUKDXRvdGFsX2NsaWVudHMYAiABKAUSFwoPaGVhbHRoeV9jbGllbnRzGAMgASgFMnAKEU1vbml0b3JpbmdTZXJ2aWNlElsKEkdldEFsbENsaWVudHNIZWFkcxIhLmFwaS52MS5HZXRBbGxDbGllbnRzSGVhZHNSZXF1ZXN0GiIuYXBpLnYxLkdldEFsbENsaWVudHNIZWFkc1Jlc3BvbnNlQjtaOWdpdGh1Yi5jb20vc3lqbjk5L2xlYW5WaWV3L2JhY2tlbmQvZ2VuL3Byb3RvL2FwaS92MTthcGl2MWIGcHJvdG8z", [file_proto_api_v1_block]);

/**
 * ClientHead represents a client's current head block
 *
 * @generated from message api.v1.ClientHead
 */
export type ClientHead = Message<"api.v1.ClientHead"> & {
  /**
   * Client label/name from config
   *
   * @generated from field: string client_label = 1;
   */
  clientLabel: string;

  /**
   * Client endpoint URL
   *
   * @generated from field: string endpoint_url = 2;
   */
  endpointUrl: string;

  /**
   * Whether the client is currently healthy
   *
   * @generated from field: bool is_healthy = 3;
   */
  isHealthy: boolean;

  /**
   * The head block (may be null if unhealthy)
   *
   * @generated from field: api.v1.BlockHeader block_header = 4;
   */
  blockHeader?: BlockHeader;

  /**
   * Hex encoded block root
   *
   * @generated from field: string block_root = 5;
   */
  blockRoot: string;

  /**
   * Unix timestamp in milliseconds of last update
   *
   * @generated from field: int64 last_update_ms = 6;
   */
  lastUpdateMs: bigint;
};

/**
 * Describes the message api.v1.ClientHead.
 * Use `create(ClientHeadSchema)` to create a new message.
 */
export const ClientHeadSchema: GenMessage<ClientHead> = /*@__PURE__*/
  messageDesc(file_proto_api_v1_monitoring, 0);

/**
 * GetAllClientsHeadsRequest - fetch heads from all clients
 *
 * Empty - returns all clients' current heads
 *
 * @generated from message api.v1.GetAllClientsHeadsRequest
 */
export type GetAllClientsHeadsRequest = Message<"api.v1.GetAllClientsHeadsRequest"> & {
};

/**
 * Describes the message api.v1.GetAllClientsHeadsRequest.
 * Use `create(GetAllClientsHeadsRequestSchema)` to create a new message.
 */
export const GetAllClientsHeadsRequestSchema: GenMessage<GetAllClientsHeadsRequest> = /*@__PURE__*/
  messageDesc(file_proto_api_v1_monitoring, 1);

/**
 * @generated from message api.v1.GetAllClientsHeadsResponse
 */
export type GetAllClientsHeadsResponse = Message<"api.v1.GetAllClientsHeadsResponse"> & {
  /**
   * @generated from field: repeated api.v1.ClientHead client_heads = 1;
   */
  clientHeads: ClientHead[];

  /**
   * @generated from field: int32 total_clients = 2;
   */
  totalClients: number;

  /**
   * @generated from field: int32 healthy_clients = 3;
   */
  healthyClients: number;
};

/**
 * Describes the message api.v1.GetAllClientsHeadsResponse.
 * Use `create(GetAllClientsHeadsResponseSchema)` to create a new message.
 */
export const GetAllClientsHeadsResponseSchema: GenMessage<GetAllClientsHeadsResponse> = /*@__PURE__*/
  messageDesc(file_proto_api_v1_monitoring, 2);

/**
 * MonitoringService provides real-time monitoring data for all connected clients
 *
 * @generated from service api.v1.MonitoringService
 */
export const MonitoringService: GenService<{
  /**
   * Get the latest block header from all connected clients
   *
   * @generated from rpc api.v1.MonitoringService.GetAllClientsHeads
   */
  getAllClientsHeads: {
    methodKind: "unary";
    input: typeof GetAllClientsHeadsRequestSchema;
    output: typeof GetAllClientsHeadsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_proto_api_v1_monitoring, 0);

